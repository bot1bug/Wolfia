networks:
  traefik:
  dockersock4traefik:

services:

  dockerproxy:
    image: tecnativa/docker-socket-proxy
    container_name: dockerproxy
    restart: always
    environment:
      CONTAINERS: 1
    ports:
      - 2375
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:z"
    networks:
      - dockersock4traefik

  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: always
    ports:
      - 80:80
      - 443:443
    expose:
      - 8080
    networks:
      - traefik
      - dockersock4traefik
    volumes:
      - ./acme.json:/acme.json:rw
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.http.middlewares.metrics-auth.basicauth.users=${METRICS_LOGIN}"
      - "traefik.http.middlewares.metrics-auth.basicauth.removeheader=true"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASH_LOGIN}"
      - "traefik.http.middlewares.whitelist.ipwhitelist.sourcerange=${CF_WHITELIST},${UPTIMEROBOT_WHITELIST}"
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=traefik-auth@docker, whitelist@docker"
    command:
      - "--log.level=info"
      - "--accesslog=true"
      - "--global.sendanonymoususage=true"
      - "--entrypoints.https.address=:443"
      - "--api.dashboard=true"
      - "--api.debug=false"
      - "--providers.docker.endpoint=tcp://dockerproxy:2375"
      - "--providers.docker.watch=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.swarmmode=false"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=acme.json"
    environment:
      - CF_API_EMAIL=${CF_MAIL}
      - CF_API_KEY=${CF_KEY}

  db:
    image: napstr/poggres:17
    restart: always
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - ./postgres-data/17/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PG_PASS}
      # See https://github.com/napstr/poggres#env-vars
      - ROLE=wolfia
      - PASSWORD=${DB_PASS}
      - DB=wolfia
      - EXTENSIONS=hstore
      - BACKUP_DB=wolfia
      - BACKUP_APPNAME=wolfia
      - BACKUP_PASS=${BACKUP_ENCRYPTION_PASS}
      - BACKUP_BUCKET_DAILY=wolfia-backups-daily
      - BACKUP_BUCKET_WEEKLY=wolfia-backups-weekly
      - BACKUP_BUCKET_MONTHLY=wolfia-backups-monthly
      - BACKUP_ACCOUNT_ID=${B2_ACCOUNT_ID}
      - BACKUP_APP_KEY=${B2_APP_KEY}

  redis:
    image: redis:7-alpine
    restart: always
    entrypoint:
      - redis-server
      - --appendonly
      - "yes"
    ports:
      - 127.0.0.1:6379:6379
    volumes:
      - ./redis-data:/data
    sysctls:
      - net.core.somaxconn=511   # container was spitting out a warning telling us to do this

  redis-exporter:
    image: oliver006/redis_exporter
    restart: always
    environment:
      - REDIS_ADDR=redis://redis:6379
    networks:
      - traefik
      - default
    labels:
      - "traefik.docker.network=wolfia_traefik"
      - "traefik.enable=true"
      - "traefik.port=9121"
      - "traefik.http.routers.redis-exporter-prom.rule=Host(`redis.${DOMAIN}`) && PathPrefix(`/metrics`)"
      - "traefik.http.routers.redis-exporter-prom.tls.certresolver=letsencrypt"
      - "traefik.http.routers.redis-exporter-prom.middlewares=metrics-auth@docker, whitelist@docker"

  bot:
    image: napstr/wolfia:master
    restart: always
    networks:
      - traefik
      - default
    labels:
      - "traefik.docker.network=wolfia_traefik"
      - "traefik.enable=true"
      - "traefik.port=4567"
      - "traefik.http.routers.wolfia-metrics.rule=Host(`bot.${DOMAIN}`) && PathPrefix(`/metrics`)"
      - "traefik.http.routers.wolfia-metrics.tls.certresolver=letsencrypt"
      - "traefik.http.routers.wolfia-metrics.middlewares=metrics-auth@docker, whitelist@docker"
      - "traefik.http.routers.bot.rule=Host(`bot.${DOMAIN}`)"
      - "traefik.http.routers.bot.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bot.middlewares=whitelist@docker"
    ports:
      - 127.0.0.1:4567:4567   # Wolfia web server
      - 127.0.0.1:8849:8849   # JProfiler
      - 127.0.0.1:5005:5005   # Remote debug
    volumes:
      - ./wolfia-secrets.yaml:/opt/wolfia/wolfia-secrets.yaml:ro
      - ./logs:/opt/wolfia/logs
      - ./logs/gc:/opt/wolfia/logs/gc
    stop_grace_period: 7200s #should really be enough to finish all games
    entrypoint:
      - java
      # Common JVM Options:
      - -Xms12g
      - -Xmx12g
      - -XX:HeapDumpPath=emergencydump.hprof
      - -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      # Hotspot Options:
      - -XX:+HeapDumpOnOutOfMemoryError
      - -Xlog:gc*:logs/gc/gc-%t.log::filesize=1g
      - -XX:+UseG1GC
      - -XX:+ParallelRefProcEnabled
      - -XX:+UseStringDeduplication
      # OpenJ9 Options
      #      - -XX:+HeapDumpOnOutOfMemory
      #      - -Xgcpolicy:balanced
      #      - -Xverbosegclog:logs/gc/gc-%Y-%m-%d_%H-%M-%S.xml
      # The Jar
      - -jar
      - wolfia.jar

  # bunch of redirects cause traefik cant do them lol
  redirect-ideas:
    image: napstr/docker-nginx-redirect
    restart: always
    networks:
      - traefik
    expose:
      - 80
    labels:
      - "traefik.docker.network=wolfia_traefik"
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.http.routers.wolfia-redirect-ideas.rule=Host(`bot.${DOMAIN}`) && PathPrefix(`/ideas`)"
      - "traefik.http.routers.wolfia-redirect-ideas.tls.certresolver=letsencrypt"
      - "traefik.http.routers.wolfia-redirect-ideas.middlewares=whitelist@docker"
    environment:
      - SERVER_REDIRECT=feedback.userreport.com
      - SERVER_REDIRECT_PATH=/01987d31-0d58-48c6-a4d3-96f2ae42eb14
      - SERVER_REDIRECT_SCHEME=https
      - SERVER_REDIRECT_CODE=307

  redirect-join:
    image: napstr/docker-nginx-redirect
    restart: always
    networks:
      - traefik
    expose:
      - 80
    labels:
      - "traefik.docker.network=wolfia_traefik"
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.http.routers.wolfia-redirect-join.rule=Host(`bot.${DOMAIN}`) && PathPrefix(`/join`)"
      - "traefik.http.routers.wolfia-redirect-join.tls.certresolver=letsencrypt"
      - "traefik.http.routers.wolfia-redirect-join.middlewares=whitelist@docker"
    environment:
      - SERVER_REDIRECT=discord.gg
      - SERVER_REDIRECT_PATH=/nvcfX3q
      - SERVER_REDIRECT_SCHEME=https
      - SERVER_REDIRECT_CODE=307
